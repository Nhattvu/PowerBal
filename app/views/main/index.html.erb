<style>
* {
    # font-family: monospace;
}

.slot-number {
    font-size: 100px;
}

.message {
    text-align: center;
    display: none;
    font-size: xx-large;
    color: red;
}

.center {
    text-align: center;
}

.lever {
    margin-top: 5px;
}

table.center {
    margin-left: auto;
    margin-right: auto;
}
</style>

<!-- Ruby display/header -->

<div class ="center">
    <h1>Rubies</h1>
    <span id="currentRubys">-</span>
</div>

<!-- Slot Game -->

<div class="jumbotron jumbotron-fluid">
    <div class="container mt-1 mb-1 center">
        <br>
        <h1>Spin to Win!</h1>
        <br>
    </div>
    <div class="center lever">
        <button type="button" class="btn btn-primary" onclick="spin()">Spin</button>
    </div>
    <table class="center">
        <tbody>
            <tr>
                <td>
                    <span id="item1" class="slot-number">-</span>
                </td>
                <td>
                    <span id="item2" class="slot-number">-</span>
                </td>
                <td>
                    <span id="item3" class="slot-number">-</span>
                </td>
            </tr>
        </tbody>
    </table>
    <div id="message" class="center message">
        You Won!
    </div>
    <audio id="win">
        <source src="http://localhost:3000/assets/casinowin.wav" type="audio/mpeg">
    </audio>
</div>

<!-- Between Game -->
<!-- i know its ugly, gonna have to style it soon -->
<div class="jumbotron jumbotron-fluid">
    <div class="container mt-1 mb-1 center">
        <br>
        <h1>Place your bet that the number in the middle will be between the two numbers. Range is 1-100</h1>
        <br>
    </div>
    <div class="input-group mb-3">
        <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)" id="betweenBet">
    </div>
    <div class="center lever">
        <button type="button" class="btn btn-primary" onclick="spinBetween()" id="betweenSpin">Spin</button>
    </div>
    <table>
        <tbody class ="center">
            <tr>
                <div style = "text-align:left">
                    <td>
                        <span id="betweenItem1" class="slot-number">-</span>
                    </td>
                    <td>
                        <span id="betweenItem2" class="slot-number">-</span>
                    </td>
                    <td>
                        <span id="betweenItem3" class="slot-number">-</span>
                    </td>
                </div>
                <div style = "text-align:center">
                    <td>
                        <span id="betweenItem4" class="slot-number">-</span>
                    </td>
                    <td>
                        <span id="betweenItem5" class="slot-number">-</span>
                    </td>
                </div>
                <div style = "text-align:right">
                    <td>
                        <span id="betweenItem7" class="slot-number">1</span>
                    </td>
                    <td>
                        <span id="betweenItem8" class="slot-number">0</span>
                    </td>
                    <td>
                        <span id="betweenItem9" class="slot-number">0</span>
                    </td>
                </div>
            </tr>
        </tbody>
    </table>
    <div id="betweenWinMessage" class="center message">
        You Won!
    </div>
    <audio id="win">
        <source src="http://localhost:3000/assets/casinowin.wav" type="audio/mpeg">
    </audio>
</div>

<!-- Defuse Game -->
<!-- i know its ugly, gonna have to style it soon -->
<div class="jumbotron jumbotron-fluid">
    <div class="container mt-1 mb-1 center">
        <br>
        <h1>Place your bet, your return will be multiplied by the current multiplier value when you hit stop. Beware, if the bomb goes off before you hit stop the multiplier will be negative!</h1>
        <br>
    </div>
    <div class="input-group mb-3">
        <input type="text" class="form-control" aria-label="Amount (to the nearest dollar)" id="defuseBet">
    </div>
    <div class="center lever">
        <button type="button" class="btn btn-primary" onclick="spinDefuse()" id="defuseSpin">-</button>
    </div>
    <table>
        <tbody class ="center">
            <tr>
                <div style = "text-align:left">
                    <td>
                        <span id="defuseItem1" class="slot-number">-</span>
                    </td>
                </div>
            </tr>
        </tbody>
    </table>
    <div id="defuseWinMessage" class="center message">
        You Won!
    </div>
    <audio id="win">
        <source src="http://localhost:3000/assets/casinowin.wav" type="audio/mpeg">
    </audio>
</div>


<script>
let currentRubys = 0;
let playingDefuse = false;
updateRubys(100);
//whenever we wanna open the 'between' game we'll call this, right now it just gets called on start
beginBetweenGame();
setupDefuseGame();

    function getRandomNumber() {
        return Math.floor(Math.random() * 2) + 1;
    }

    function getElement(id) {
        return document.getElementById(id);
    }

    //slot machine
    function spin() {
        if(currentRubys >= 50){
            const item1 = getElement('item1');
            const item2 = getElement('item2');
            const item3 = getElement('item3');

            const num1 = getRandomNumber();
            const num2 = getRandomNumber();
            const num3 = getRandomNumber();

            item1.innerHTML = `${num1}`;
            item2.innerHTML = `${num2}`;
            item3.innerHTML = `${num3}`;

            if (num1 === num2 && num1 === num3) {
                playWin();
                showMessage();
                updateRubys(350);
            } else {
                hideMessage();
                updateRubys(-50);
            }
        }else{
            alert("Not enough rubies, this game requires at least 50 rubies");
        }
    }

    //between game
    function beginBetweenGame(){
        const item1 = getElement('betweenItem1');
        const item2 = getElement('betweenItem2');
        const item3 = getElement('betweenItem3');
        const item4 = getElement('betweenItem4');
        const item5 = getElement('betweenItem5');
        const bet = getElement('betweenBet');

        const leftNum = Math.floor(Math.random() * 100);
        let leftNumString = leftNum.toString();

        item1.innerHTML = `${leftNumString.charAt(0)}`;
        item2.innerHTML = `${leftNumString.charAt(1)}`;
        item3.innerHTML = `${leftNumString.charAt(2)}`;
        item4.innerHTML = item5.innerHTML = "_";
        item4.style.color = item5.style.color = 'black';
        getElement('betweenSpin').disabled = false;
        const msg = document.getElementById("betweenWinMessage");
        msg.style.display = "none";
        bet.value = 0;
        console.log("Left Number is " + leftNumString);
    }

    function spinBetween(){
        const item1 = getElement('betweenItem1');
        const item2 = getElement('betweenItem2');
        const item3 = getElement('betweenItem3');
        const item4 = getElement('betweenItem4');
        const item5 = getElement('betweenItem5');
        const bet = getElement('betweenBet');

        if(parseInt(bet.value) <= currentRubys && currentRubys > 0 && parseInt(bet.value) > 0){

            const leftNum = parseInt(item1.innerHTML + item2.innerHTML + item3.innerHTML);
            
            const middleNum = Math.floor(Math.random() * 100);
            let middleNumString = middleNum.toString();

            item4.innerHTML = `${middleNumString.charAt(0)}`;
            item5.innerHTML = `${middleNumString.charAt(1)}`;

            console.log("Middle Number is " + middleNumString);

            var win = middleNum >= leftNum;
            if(win){
                item4.style.color = item5.style.color = 'green';
                updateRubys(parseInt(bet.value));
                playWin();
                const msg = document.getElementById("betweenWinMessage");
                msg.style.display = "block"; 
                console.log("Between game won with bet of " + bet.value);
            }else{
                item4.style.color = item5.style.color = 'red';
                updateRubys(-parseInt(bet.value));
                console.log("Between game lost with bet of " + bet.value);
            }
            getElement('betweenSpin').disabled = true;
            setTimeout(function(){
                beginBetweenGame();
            }, 3000);
        }else{
            alert("Invalid bet");
        }
    }

    //defuse game
    function setupDefuseGame(){
        const spin = getElement('defuseSpin');
        const item1 = getElement('defuseItem1');
        const bet = getElement('defuseBet');

        spin.innerHTML = "Start";
        bet.value = 0;
        item1.innerHTML = "_";
        item1.style.color = "black";
        spin.disabled = false;
    }

    function spinDefuse(){
        const spin = getElement('defuseSpin');
        const bet = getElement('defuseBet');

        if(spin.innerHTML == "Start"){
            if(parseInt(bet.value) <= currentRubys && currentRubys > 0 && parseInt(bet.value) > 0){
                playingDefuse = true;
                spin.innerHTML = "Stop";
                startDefuseGame();
            }else{
                alert("Invalid bet");
            }
        }else{
            playingDefuse = false;
        }
    }

    function resolveAfter2Seconds() {
        return new Promise(resolve => {
            setTimeout(() => {
                resolve('resolved');
            },2000);
        });
    }

    async function startDefuseGame() {
        const spin = getElement('defuseSpin');
        const item1 = getElement('defuseItem1');
        const bet = getElement('defuseBet');

        var mult = 0;
        var bomb = false;
        while(mult < 10 && bomb == false && playingDefuse == true){
            const result = await resolveAfter2Seconds();
            if(playingDefuse == true){
                item1.innerHTML = mult.toString();
                const rdNum = Math.floor(Math.random() * 101);
                mult++;
                if(rdNum <= 20){
                    bomb = true;
                    spin.disabled = true;
                    item1.innerHTML = -mult.toString();
                    item1.style.color = 'red';
                    const msg = document.getElementById("defuseWinMessage");
                    msg.style.display = "none";
                    updateRubys(-parseInt(bet.value) * mult);
                    setTimeout(function(){
                        setupDefuseGame();
                    }, 4000);
                    return;
                }else{
                    item1.innerHTML = mult.toString();
                    item1.style.color = "green";
                }
            }
        }
        spin.disabled = true;
        const msg = document.getElementById("defuseWinMessage");
        msg.style.display = "block";
        playWin();
        updateRubys(parseInt(bet.value) * mult);
        setTimeout(function(){
            setupDefuseGame();
        },4000);
    }

    function updateRubys(amt){
        currentRubys += amt;
        console.log("Ruby count updated to " + currentRubys);
        if(currentRubys <= 0){
            currentRubys = 0;
            alert("OH NO! ....... Your Rubies! ...... Their Gone! \nRefresh the page to start over :(");
        }
        getElement('currentRubys').innerHTML = `${currentRubys}`;
    }

    function playWin() {
        const boing = document.getElementById("win");
        win.play();
    }

    function showMessage() {
        const msg = document.getElementById("message");
        msg.style.display = "block";
    }

    function hideMessage() {
        const msg = document.getElementById("message");
        msg.style.display = "none";
    }
</script>